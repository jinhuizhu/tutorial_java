package com.zjh.learning.jse.collections;

import com.google.common.base.MoreObjects;

import java.util.Comparator;
import java.util.Objects;

import static java.util.Comparator.comparing;

/**
 * Created by jinhui on 10/9/2016.
 */
public class Product {
    // comparator in java8
    public static final Comparator<Product> BY_WEIGHT = comparing(Product::getWeight);
    public static final Comparator<Product> BY_NAME = comparing(Product::getName);

//    public static final Comparator<Product> BY_WEIGHT = new Comparator<Product>() {
//        @Override
//        public int compare(Product o1, Product o2) {
//            return Integer.compare(o1.getWeight(), o2.getWeight());
//        }
//    };

    protected final String name;
    protected final int weight;

    public Product(String name, int weight) {
        this.name = name;
        this.weight = weight;
    }

    public String getName() {
        return name;
    }

    public int getWeight() {
        return weight;
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper("Product")
                .add("name", name)
                .add("weight", weight)
                .toString();
    }

    @Override
    public boolean equals(Object o) {
        // generated by IDEA:
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Product product = (Product) o;

        if (weight != product.weight) return false;
//        return name != null ? name.equals(product.name) : product.name == null;
        // java 7:
        return Objects.equals(name, product.getName());
    }

    @Override
    public int hashCode() {
//        // generated by IDEA:
//        int result = name != null ? name.hashCode() : 0;
//        result = 31 * result + weight;
//        return result;

        // java 7
        return Objects.hash(name, weight);
    }
}
